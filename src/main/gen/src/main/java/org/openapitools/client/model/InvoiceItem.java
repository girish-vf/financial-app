/*
 * com_my_financial_app API
 * com_my_financial_app API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * InvoiceItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-01T19:34:10.510748+02:00[Europe/Berlin]")
public class InvoiceItem {
  public static final String SERIALIZED_NAME_PRODUCT_NAME = "productName";
  @SerializedName(SERIALIZED_NAME_PRODUCT_NAME)
  private Object productName = null;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Object quantity = null;

  public static final String SERIALIZED_NAME_RATE = "rate";
  @SerializedName(SERIALIZED_NAME_RATE)
  private Object rate = null;

  public static final String SERIALIZED_NAME_VALUE_OF_SUPPLIES = "valueOfSupplies";
  @SerializedName(SERIALIZED_NAME_VALUE_OF_SUPPLIES)
  private Object valueOfSupplies = null;

  public static final String SERIALIZED_NAME_SALES_TAX = "salesTax";
  @SerializedName(SERIALIZED_NAME_SALES_TAX)
  private Object salesTax = null;

  public static final String SERIALIZED_NAME_NET_AMOUNT = "netAmount";
  @SerializedName(SERIALIZED_NAME_NET_AMOUNT)
  private Object netAmount = null;

  public InvoiceItem() {
  }

  public InvoiceItem productName(Object productName) {
    
    this.productName = productName;
    return this;
  }

   /**
   * Get productName
   * @return productName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getProductName() {
    return productName;
  }


  public void setProductName(Object productName) {
    this.productName = productName;
  }


  public InvoiceItem quantity(Object quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getQuantity() {
    return quantity;
  }


  public void setQuantity(Object quantity) {
    this.quantity = quantity;
  }


  public InvoiceItem rate(Object rate) {
    
    this.rate = rate;
    return this;
  }

   /**
   * Get rate
   * @return rate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getRate() {
    return rate;
  }


  public void setRate(Object rate) {
    this.rate = rate;
  }


  public InvoiceItem valueOfSupplies(Object valueOfSupplies) {
    
    this.valueOfSupplies = valueOfSupplies;
    return this;
  }

   /**
   * Get valueOfSupplies
   * @return valueOfSupplies
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getValueOfSupplies() {
    return valueOfSupplies;
  }


  public void setValueOfSupplies(Object valueOfSupplies) {
    this.valueOfSupplies = valueOfSupplies;
  }


  public InvoiceItem salesTax(Object salesTax) {
    
    this.salesTax = salesTax;
    return this;
  }

   /**
   * Get salesTax
   * @return salesTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getSalesTax() {
    return salesTax;
  }


  public void setSalesTax(Object salesTax) {
    this.salesTax = salesTax;
  }


  public InvoiceItem netAmount(Object netAmount) {
    
    this.netAmount = netAmount;
    return this;
  }

   /**
   * Get netAmount
   * @return netAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getNetAmount() {
    return netAmount;
  }


  public void setNetAmount(Object netAmount) {
    this.netAmount = netAmount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceItem invoiceItem = (InvoiceItem) o;
    return Objects.equals(this.productName, invoiceItem.productName) &&
        Objects.equals(this.quantity, invoiceItem.quantity) &&
        Objects.equals(this.rate, invoiceItem.rate) &&
        Objects.equals(this.valueOfSupplies, invoiceItem.valueOfSupplies) &&
        Objects.equals(this.salesTax, invoiceItem.salesTax) &&
        Objects.equals(this.netAmount, invoiceItem.netAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productName, quantity, rate, valueOfSupplies, salesTax, netAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceItem {\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("    valueOfSupplies: ").append(toIndentedString(valueOfSupplies)).append("\n");
    sb.append("    salesTax: ").append(toIndentedString(salesTax)).append("\n");
    sb.append("    netAmount: ").append(toIndentedString(netAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("productName");
    openapiFields.add("quantity");
    openapiFields.add("rate");
    openapiFields.add("valueOfSupplies");
    openapiFields.add("salesTax");
    openapiFields.add("netAmount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("productName");
    openapiRequiredFields.add("quantity");
    openapiRequiredFields.add("rate");
    openapiRequiredFields.add("valueOfSupplies");
    openapiRequiredFields.add("salesTax");
    openapiRequiredFields.add("netAmount");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to InvoiceItem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (InvoiceItem.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in InvoiceItem is not found in the empty JSON string", InvoiceItem.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!InvoiceItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InvoiceItem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : InvoiceItem.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InvoiceItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InvoiceItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InvoiceItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InvoiceItem.class));

       return (TypeAdapter<T>) new TypeAdapter<InvoiceItem>() {
           @Override
           public void write(JsonWriter out, InvoiceItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InvoiceItem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of InvoiceItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of InvoiceItem
  * @throws IOException if the JSON string is invalid with respect to InvoiceItem
  */
  public static InvoiceItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InvoiceItem.class);
  }

 /**
  * Convert an instance of InvoiceItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

