/*
 * com_my_financial_app API
 * com_my_financial_app API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Invoice
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-01T19:34:10.510748+02:00[Europe/Berlin]")
public class Invoice {
  public static final String SERIALIZED_NAME_ID = "_id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Object id = null;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Object type = null;

  public static final String SERIALIZED_NAME_INVOICE_DATE = "invoiceDate";
  @SerializedName(SERIALIZED_NAME_INVOICE_DATE)
  private Object invoiceDate = null;

  public static final String SERIALIZED_NAME_DUE_DATE = "dueDate";
  @SerializedName(SERIALIZED_NAME_DUE_DATE)
  private Object dueDate = null;

  public static final String SERIALIZED_NAME_INVOICE_NO = "invoiceNo";
  @SerializedName(SERIALIZED_NAME_INVOICE_NO)
  private Object invoiceNo = null;

  public static final String SERIALIZED_NAME_PARTNER_ID = "partnerId";
  @SerializedName(SERIALIZED_NAME_PARTNER_ID)
  private Object partnerId = null;

  public static final String SERIALIZED_NAME_CREDIT_TERM = "creditTerm";
  @SerializedName(SERIALIZED_NAME_CREDIT_TERM)
  private Object creditTerm = null;

  public static final String SERIALIZED_NAME_REFERENCE = "reference";
  @SerializedName(SERIALIZED_NAME_REFERENCE)
  private Object reference = null;

  public static final String SERIALIZED_NAME_INVOICE_TOTAL = "invoiceTotal";
  @SerializedName(SERIALIZED_NAME_INVOICE_TOTAL)
  private Object invoiceTotal = null;

  public static final String SERIALIZED_NAME_INVOICE_ITEMS = "invoiceItems";
  @SerializedName(SERIALIZED_NAME_INVOICE_ITEMS)
  private Object invoiceItems = null;

  public Invoice() {
  }

  public Invoice id(Object id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getId() {
    return id;
  }


  public void setId(Object id) {
    this.id = id;
  }


  public Invoice type(Object type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getType() {
    return type;
  }


  public void setType(Object type) {
    this.type = type;
  }


  public Invoice invoiceDate(Object invoiceDate) {
    
    this.invoiceDate = invoiceDate;
    return this;
  }

   /**
   * Get invoiceDate
   * @return invoiceDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getInvoiceDate() {
    return invoiceDate;
  }


  public void setInvoiceDate(Object invoiceDate) {
    this.invoiceDate = invoiceDate;
  }


  public Invoice dueDate(Object dueDate) {
    
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getDueDate() {
    return dueDate;
  }


  public void setDueDate(Object dueDate) {
    this.dueDate = dueDate;
  }


  public Invoice invoiceNo(Object invoiceNo) {
    
    this.invoiceNo = invoiceNo;
    return this;
  }

   /**
   * Get invoiceNo
   * @return invoiceNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getInvoiceNo() {
    return invoiceNo;
  }


  public void setInvoiceNo(Object invoiceNo) {
    this.invoiceNo = invoiceNo;
  }


  public Invoice partnerId(Object partnerId) {
    
    this.partnerId = partnerId;
    return this;
  }

   /**
   * Get partnerId
   * @return partnerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getPartnerId() {
    return partnerId;
  }


  public void setPartnerId(Object partnerId) {
    this.partnerId = partnerId;
  }


  public Invoice creditTerm(Object creditTerm) {
    
    this.creditTerm = creditTerm;
    return this;
  }

   /**
   * Get creditTerm
   * @return creditTerm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getCreditTerm() {
    return creditTerm;
  }


  public void setCreditTerm(Object creditTerm) {
    this.creditTerm = creditTerm;
  }


  public Invoice reference(Object reference) {
    
    this.reference = reference;
    return this;
  }

   /**
   * Get reference
   * @return reference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getReference() {
    return reference;
  }


  public void setReference(Object reference) {
    this.reference = reference;
  }


  public Invoice invoiceTotal(Object invoiceTotal) {
    
    this.invoiceTotal = invoiceTotal;
    return this;
  }

   /**
   * Get invoiceTotal
   * @return invoiceTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getInvoiceTotal() {
    return invoiceTotal;
  }


  public void setInvoiceTotal(Object invoiceTotal) {
    this.invoiceTotal = invoiceTotal;
  }


  public Invoice invoiceItems(Object invoiceItems) {
    
    this.invoiceItems = invoiceItems;
    return this;
  }

   /**
   * Get invoiceItems
   * @return invoiceItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getInvoiceItems() {
    return invoiceItems;
  }


  public void setInvoiceItems(Object invoiceItems) {
    this.invoiceItems = invoiceItems;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Invoice invoice = (Invoice) o;
    return Objects.equals(this.id, invoice.id) &&
        Objects.equals(this.type, invoice.type) &&
        Objects.equals(this.invoiceDate, invoice.invoiceDate) &&
        Objects.equals(this.dueDate, invoice.dueDate) &&
        Objects.equals(this.invoiceNo, invoice.invoiceNo) &&
        Objects.equals(this.partnerId, invoice.partnerId) &&
        Objects.equals(this.creditTerm, invoice.creditTerm) &&
        Objects.equals(this.reference, invoice.reference) &&
        Objects.equals(this.invoiceTotal, invoice.invoiceTotal) &&
        Objects.equals(this.invoiceItems, invoice.invoiceItems);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, invoiceDate, dueDate, invoiceNo, partnerId, creditTerm, reference, invoiceTotal, invoiceItems);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Invoice {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    invoiceDate: ").append(toIndentedString(invoiceDate)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    invoiceNo: ").append(toIndentedString(invoiceNo)).append("\n");
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    creditTerm: ").append(toIndentedString(creditTerm)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    invoiceTotal: ").append(toIndentedString(invoiceTotal)).append("\n");
    sb.append("    invoiceItems: ").append(toIndentedString(invoiceItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("_id");
    openapiFields.add("type");
    openapiFields.add("invoiceDate");
    openapiFields.add("dueDate");
    openapiFields.add("invoiceNo");
    openapiFields.add("partnerId");
    openapiFields.add("creditTerm");
    openapiFields.add("reference");
    openapiFields.add("invoiceTotal");
    openapiFields.add("invoiceItems");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("invoiceDate");
    openapiRequiredFields.add("dueDate");
    openapiRequiredFields.add("invoiceNo");
    openapiRequiredFields.add("partnerId");
    openapiRequiredFields.add("creditTerm");
    openapiRequiredFields.add("reference");
    openapiRequiredFields.add("invoiceTotal");
    openapiRequiredFields.add("invoiceItems");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Invoice
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Invoice.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Invoice is not found in the empty JSON string", Invoice.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Invoice.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Invoice` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Invoice.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Invoice.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Invoice' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Invoice> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Invoice.class));

       return (TypeAdapter<T>) new TypeAdapter<Invoice>() {
           @Override
           public void write(JsonWriter out, Invoice value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Invoice read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Invoice given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Invoice
  * @throws IOException if the JSON string is invalid with respect to Invoice
  */
  public static Invoice fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Invoice.class);
  }

 /**
  * Convert an instance of Invoice to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

